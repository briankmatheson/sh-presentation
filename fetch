#!/bin/sh
#
#

configfile=~/.fetch.conf
tmpdir=/tmp/$0-$$
install_command="sudo /usr/bin/install"
curl_command="/usr/bin/curl -L"

usage() {
    echo
    echo "Usage: $0 [-r|-t TMPDIR ]"
    echo 
}

die() {
    echo ERROR:\ $* >&2
    exit 1
}

unpack() {
    file=$1
    base=$2
    
    file $file |grep gzip && mv $file $file.gz && gzip -d $file.gz
    file $file |grep tar && mv $file $file.tar && tar xf $file.tar
    thing=`find ./ -name $base | head -1`
    file $thing | grep ELF && cp $thing $tmpdir/$base
}
	

mkdir -p $tmpdir
trap "rm -rf $tmpdir" EXIT
cd $tmpdir


# parse some arguments
case $* in
    -r|--remove)
	shift
	rm_command='rm -f'
	;;
    -t|--tmpdir)
	shift
	tmpdir=`shift`
	;;
    -h|--help)
	shift
	usage
	exit 0
	;;
esac	    

# anything else in $* is junk, so...
if [ -n "$*" ]; then
    die illegal command-line option $*
fi

echo do we have enough space in tmpdir, $tmpdir?
df -h $tmpdir

echo can we write to it?
touch $tmpdir/file || die can\'t write to $tmpdir

echo are we ready to replace the following?
while read thing url to 
do
    if [ -z "$thing" ]; then
	continue
    fi
    md5sum $to/$thing
done < $configfile

read -p "Type 'yes' to continue: " conn
case $conn in
    yes|Yes|YES)
	while read thing url to 
	do
	    if [ -z "$thing" ]; then
		continue
	    fi
	    $curl_command -o $tmpdir/$thing $url
	    if [ -n "$rm_command" ]; then
		$rm_command $to/$thing
	    else
		base=`basename $thing`
		unpack $tmpdir/$thing $base
	        $install_command $tmpdir/$base $to/$base
	    fi
	done < $configfile
	;;
    *)
esac
    
