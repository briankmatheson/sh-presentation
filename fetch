#!/bin/sh
#
#

# declare some constants
configfile=~/.fetch.conf
tmpdir=/tmp/`basename $0`-$$
install_command="sudo /usr/bin/install"
curl_command="/usr/bin/curl -qL"
rm_command=''

# make some functions
cleanup() {
    rm -rf $tmpdir
}

usage() {
    cat <<EOF

Usage: $0 [-r|-t TMPDIR ]

EOF
}

die() {
    echo ERROR:\ $* >&2
    usage
    exit 1
}

unpack() {
    file=$1
    base=$2
    
    file $file |grep gzip && mv $file $file.gz && gzip -d $file.gz
    file $file |grep tar && mv $file $file.tar && tar xf $file.tar
    thing=`find ./ -name $base | head -1`
    file $thing | grep ELF && cp $thing $tmpdir/$base
}
	

# parse some arguments
while test -n "$*"; do
    arg=`shift` || break
    case $arg in
	-r|--remove)
	    rm_command='sudo rm -f'
	    ;;
	-t|--tmpdir)
	    tmpdir=`shift` || die -t needs a following arg
	    ;;
	-h|--help)
	    usage
	    exit 0
	    ;;
	*)
	    junk=`shift`
	    ;;
    esac
done

echo anything else in $junk?
if [ -n "$junk" ]; then
    die illegal command-line option $junk
fi

if [ -r "$configfile" ]; then
    sed 's/#.*//' <$configfile | grep '\W' | wc -l 
else
    die can\'t read $configfile
fi

mkdir -p $tmpdir || die can\t make $tmpdir

echo enough space in tmpdir $tmpdir?
df -h $tmpdir

echo can we write to it?
touch $tmpdir/file || die can\'t write to $tmpdir

echo 

echo are we ready to remove \(and replace\) the following?
while sed 's/#.*//' | read thing url to 
do
    if [ -z "$thing" ]; then
	continue
    fi
    md5sum $to/$thing
done < $configfile

read -p "Type 'yes' to continue: " conn
case $conn in
    yes|Yes|YES)
	echo ---
	sed 's/#.*//' | while read thing url to 
	do
	    if [ -z "$thing" ]; then
		continue
	    fi
	    if [ -n "$rm_command" ]; then
		echo $rm_command $to/$thing
		$rm_command $to/$thing
		continue
	    else
	        echo $curl_command -o $tmpdir/$thing $url
		$curl_command -o $tmpdir/$thing $url
		base=`basename $thing`
		unpack $tmpdir/$thing $base
	        $install_command $tmpdir/$base $to/$base
	    fi
	    echo
	done < $configfile
	;;
    *)
esac
    
